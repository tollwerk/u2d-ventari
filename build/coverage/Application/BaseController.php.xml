<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="BaseController.php" path="/Application">
    <totals>
      <lines total="37" comments="3" code="34" executable="12" executed="12" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Tollwerk\Ventari\Application\BaseController" start="5" executable="12" executed="12" crap="6">
      <package full="" name="" sub="" category=""/>
      <namespace name="Tollwerk\Ventari\Application"/>
      <method name="__construct" signature="__construct(string $projectName)" start="11" end="22" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="init" signature="init()" start="24" end="31" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="sanitizePath" signature="sanitizePath(string $path)" start="33" end="37" crap="2" executable="2" executed="2" coverage="100"/>
    </class>
    <coverage>
      <line nr="13">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="14">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="15">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="17">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="18">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="21">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="22">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="29">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="30">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="31">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="35">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
      <line nr="36">
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testConstructor"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #0"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #1"/>
        <covered by="Tollwerk\Ventari\Tests\Applications\BaseControllerTest::testSanitizePath with data set #2"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Tollwerk</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Ventari</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Application</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseController</token>
      </line>
      <line no="6">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="7">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$projectName</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$configFile</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$configuration</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$projectName</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$config_file</token>
        <token name="T_WHITESPACE">       </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DIR">__DIR__</token>
        <token name="T_DOT">.</token>
        <token name="T_STRING">DIRECTORY_SEPARATOR</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'..'</token>
        <token name="T_DOT">.</token>
        <token name="T_STRING">DIRECTORY_SEPARATOR</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'../config.xml'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">projectName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$projectName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$projectName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"Ventari"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configFile</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config_file</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">file_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configuration</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">simplexml_load_file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configFile</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">init</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">         * REST_API SHOULD ONLY be a local variable. As it will be used to initiate the Resource. Only needed once.</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">sanitizePath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configuration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$REST_API</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configuration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">protocol</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">"://"</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">configuration</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">uri</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sanitizePath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$sanitized_path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/^\/[aA-zZ]*/'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$sanitized_path</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="38">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
